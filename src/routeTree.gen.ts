/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppLayoutImport } from './routes/_app/_layout'
import { Route as AppLayoutLoginIndexImport } from './routes/_app/_layout/login/index'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AppLayoutRoute = AppLayoutImport.update({
  id: '/_app/_layout',
  getParentRoute: () => rootRoute,
} as any)

const AppLayoutLoginIndexRoute = AppLayoutLoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => AppLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_app/_layout': {
      id: '/_app/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_app/_layout/login/': {
      id: '/_app/_layout/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AppLayoutLoginIndexImport
      parentRoute: typeof AppLayoutImport
    }
  }
}

// Create and export the route tree

interface AppLayoutRouteChildren {
  AppLayoutLoginIndexRoute: typeof AppLayoutLoginIndexRoute
}

const AppLayoutRouteChildren: AppLayoutRouteChildren = {
  AppLayoutLoginIndexRoute: AppLayoutLoginIndexRoute,
}

const AppLayoutRouteWithChildren = AppLayoutRoute._addFileChildren(
  AppLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '': typeof AppLayoutRouteWithChildren
  '/login': typeof AppLayoutLoginIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '': typeof AppLayoutRouteWithChildren
  '/login': typeof AppLayoutLoginIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/_app/_layout': typeof AppLayoutRouteWithChildren
  '/_app/_layout/login/': typeof AppLayoutLoginIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/login'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/login'
  id: '__root__' | '/' | '/_app/_layout' | '/_app/_layout/login/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AppLayoutRoute: typeof AppLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AppLayoutRoute: AppLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_app/_layout"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_app/_layout": {
      "filePath": "_app/_layout.tsx",
      "children": [
        "/_app/_layout/login/"
      ]
    },
    "/_app/_layout/login/": {
      "filePath": "_app/_layout/login/index.tsx",
      "parent": "/_app/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
